name: Build and publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
    name: DockerHub | Push image
    runs-on: self-hosted
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,prefix=commit_
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=user/app:buildcache
          cache-to: type=inline
  
  ansible:
    name: Ansible | Pull Docker Image to server
    needs: docker
    runs-on: self-hosted
    container: willhallonline/ansible:2.13-alpine-3.15
    steps:
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}
          tags: |
            type=sha,prefix=commit_
      - 
        name: Get vars
        run: |
          echo "Docker SHA Tag: ${{ steps.meta.outputs.tags }}"
          touch $TMPDIR/vars.yml
          echo "PROJECT_NAME: ${{ github.event.repository.name }}" >> $TMPDIR/vars.yml
          echo "IMAGE: ${{ steps.meta.outputs.tags }}" >> $TMPDIR/vars.yml
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}" >> $TMPDIR/vars.yml
          echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}" >> $TMPDIR/vars.yml
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Setup SSH Key
        run: |
          echo "${{ secrets.SSH_KEY }}" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh/
          touch ~/.ssh/known_hosts
          echo "${{ vars.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          echo ${{ github.ref }}
      -
        name: Deploy to Develop server
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: |
          cat $TMPDIR/vars.yml
      - 
        name: Deploy to Prod server
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "SSH_USER: ${{ vars.PROD_SSH_USER }}" >> $TMPDIR/vars.yml
          echo "SSH_SERVER: ${{ vars.PROD_SERVER }}" >> $TMPDIR/vars.yml
          echo "SSH_PORT: ${{ vars.PROD_SSH_PORT }}" >> $TMPDIR/vars.yml
          echo "SSH_PASSWORD: ${{ secrets.PROD_SSH_PASSWORD }}" >> $TMPDIR/vars.yml

          echo "POSTGRES_DB: ${{ secrets.PROD_POSTGRES_DB }}" >> $TMPDIR/vars.yml
          echo "POSTGRES_HOST: ${{ secrets.PROD_POSTGRES_HOST }}" >> $TMPDIR/vars.yml
          echo "POSTGRES_PORT: ${{ secrets.PROD_POSTGRES_PORT }}" >> $TMPDIR/vars.yml
          echo "POSTGRES_USER: ${{ secrets.PROD_POSTGRES_USER }}" >> $TMPDIR/vars.yml
          echo "POSTGRES_PASSWORD: ${{ secrets.PROD_POSTGRES_PASSWORD }}" >> $TMPDIR/vars.yml
          
          echo "FASTAPI_SECRET: ${{ secrets.FASTAPI_SECRET }}" >> $TMPDIR/vars.yml
          echo "ADMIN_SECRET: ${{ secrets.ADMIN_SECRET }}" >> $TMPDIR/vars.yml

      - 
        name: Run ansible playbook
        run: |
          cat $TMPDIR/vars.yml
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i ansible/inventory/base.ini ansible/playbook.yml --private-key=private_key --extra-vars "@$TMPDIR/vars.yml"
